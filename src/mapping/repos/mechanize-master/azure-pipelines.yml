# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Linux'
  pool:
    vmImage: 'Ubuntu-latest'
  strategy:
    matrix:
      Python39:
        python.version: '3.9'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      sudo apt-get --yes update
      sudo apt-get --yes install libxml2-dev libxslt-dev
      pip install -e '.[test]'
      pip install --no-binary lxml -e '.[binarytest]'
    displayName: 'Install dependencies'

  - script: |
      python run_tests.py
    displayName: 'test'


- job: 'macOS'
  pool:
    vmImage: 'macOS-latest'
  steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.10'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install -e '.[test]'
    displayName: 'Install dependencies'

  - script: |
      python run_tests.py
    displayName: 'test'


- job: 'Windows'
  pool:
    vmImage: 'windows-latest'

  steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install -e .[test]
    displayName: 'Install dependencies'

  - script: |
      python run_tests.py
    displayName: 'test'
